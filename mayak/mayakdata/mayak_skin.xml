<?xml version="1.0" encoding="UTF-8"?>
<krpano version="1.19-pr16">

    
  <!-- Spot Style - Default Point Spot Style -->


  <style name="IconDefaultPointSpotStyle"
         url="%FIRSTXML%/spots/hotspot_image_sequence_user_defaultpoint0.png"
         visible="false"
         frame="0"
         lastframe="12"
         framewidth="50"
         frameheight="50"
         stopspotsequence="false"
         crop="0|0|50|50"
         edge="center"
         onloaded="startspotanimation(0.1);"
         onhover="onhoverIconDefaultPointSpotStyle"
         onout="onoutIconDefaultPointSpotStyle"


         width="25"
         height="prop"
         />
  <action name="onhoverIconDefaultPointSpotStyle">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconDefaultPointSpotStyle">
    hideTooltip();



  </action>



  <!-- unsupported kind of display : PointMap -->


    
  <!-- Spot Style - Default Point Spot Style 1 -->


  <style name="IconDefaultPointSpotStyle1"
         url="%FIRSTXML%/spots/hotspot_direction_sequence_user_defaultpoint1.png"
         visible="false"
         frame="0"
         lastframe="18"
         framewidth="50"
         frameheight="50"
         stopspotsequence="false"
         crop="0|0|50|50"
         edge="center"
         rotate="180"
         onloaded="startspotanimation(0.1);"
         onhover="onhoverIconDefaultPointSpotStyle1"
         onout="onoutIconDefaultPointSpotStyle1"


         />
  <action name="onhoverIconDefaultPointSpotStyle1">
    showtooltip('hotspot');
  </action>
  <action name="onoutIconDefaultPointSpotStyle1">
    hideTooltip();



  </action>



<!-- ********** -->
<!-- Circles Control Bar castom -->
<!-- id : CirclesControlBar -->
<!-- ********** -->

  <krpano CirclesControlBarbarbuilt="false" CirclesControlBarbackgroundwidthwhenclosed="0" CirclesControlBarbackgroundwidthwhenopened="0" CirclesControlBarIsOpened="false" />
  <events name="CirclesControlBarevents" 
    onxmlcomplete="CirclesControlBarbuildMenuBar();" 


    keep="true" />



  <action name="CirclesControlBarbuildMenuBar">
    ifnot (CirclesControlBarbarbuilt, CirclesControlBarbuildMenu(); set(CirclesControlBarbarbuilt, true););
  </action>

  <style name="CirclesControlBar_btn_style"
         keep="true"
         edge="right"
         align="right"
         x="0" y="0"
         width="40" height="40"
         crop="0|0|60|60"
         onovercrop="0|60|60|60"
         ondowncrop="0|120|60|60"
         onhover="showTooltip('plugin', CirclesControlBarmenuTooltipStyle, bottom);"
         onout="hideTooltip();"
         />
  <style name="CirclesControlBar_btn_style_off"
         keep="true"
         edge="right"
         align="right"
         x="0" y="0"
         width="40" height="40"
         onhover="showTooltip('plugin', CirclesControlBarmenuTooltipStyle, bottom);"
         onout="hideTooltip();"
         />

  <layer name="CirclesControlBar_menu_bg"
         keep="true"
         type="container"
         zorder="1"
         width="40"
         height="40"
         align="bottom"
         x="0" y="10"
         maskchildren="true"
         rotate="0"
         visible="false"
         >

    <layer name="CirclesControlBarbtn_enter_vr"
            url="%FIRSTXML%/graphics/circlescontrolbar/btn_vr_mode.png"
            style="CirclesControlBar_btn_style"
            onclick="if(scene[get(xml.scene)].full360 AND disableCurrentSceneVrConservation !== true,
    js(accessWebVr(get(xml.scene),get(videoscenestarttime)));
,
    js(accessWebVr(null));
);"
            tooltip="CirclesControlBarenterVRTip"
            visible="false"
            devices="html5"
            />
    <layer name="CirclesControlBarbtn_enter_vr_not"
            url="%FIRSTXML%/graphics/circlescontrolbar/btn_vr_mode_off.png"
            style="CirclesControlBar_btn_style"
            tooltip="CirclesControlBarenterVRNotTip"
            enabled="true"
            capture="false"
            visible="false"
            devices="html5"
            />

    <layer name="CirclesControlBarbtn_ctrlmode_move_to"
            url="%FIRSTXML%/graphics/circlescontrolbar/btn_move_to.png"
            style="CirclesControlBar_btn_style"
            tooltip="CirclesControlBarctrlmodeMoveTip"
            onclick="setControlModeMoveTo();
"
            visible="false"
            devices="desktop"
            />
    <layer name="CirclesControlBarbtn_ctrlmode_drag_to"
            url="%FIRSTXML%/graphics/circlescontrolbar/btn_drag_to.png"
            style="CirclesControlBar_btn_style"
            tooltip="CirclesControlBarctrlmodeDragTip"
            onclick="setControlModeDragTo();
"
            visible="false"
            devices="desktop"
            />





    <layer name="CirclesControlBarbtn_openfs"
            url="%FIRSTXML%/graphics/circlescontrolbar/btn_enter_fs.png"
            onclick="enterFullscreen();
"
            style="CirclesControlBar_btn_style"
            visible="false"
            devices="fullscreensupport"
            tooltip="CirclesControlBaropenFsTip"
            />
    <layer name="CirclesControlBarbtn_closefs"
            url="%FIRSTXML%/graphics/circlescontrolbar/btn_close_fs.png"
            onclick="exitFullscreen();
"
            style="CirclesControlBar_btn_style"
            visible="false"
            devices="fullscreensupport"
            tooltip="CirclesControlBarcloseFsTip"
            />





 </layer>



<events name="CirclesControlBarvravailableevent"
		onvravailable="CirclesControlBarupdateVrButtonsAvailability();"
		onvrunavailable="CirclesControlBarupdateVrButtonsAvailability();"
		keep="true" devices="html5" />
	<krpano CirclesControlBarmenuvravailable="false" />
	<action name="CirclesControlBarupdateVrButtonsAvailability">
		if (tour_vrdevices,
			set(CirclesControlBarmenuvravailable, true);
		,
			set(CirclesControlBarmenuvravailable, false);
		);
		CirclesControlBarupdateVrButtons();
	</action>
	<action name="CirclesControlBarHideVrButtons">
		set(layer[CirclesControlBarbtn_enter_vr].visible, false);
		if('%1' == 'true' AND plugin[ptpvrmode],
			set(layer[CirclesControlBarbtn_enter_vr_not].visible, true);
		,
			set(layer[CirclesControlBarbtn_enter_vr_not].visible, false);
		);
	</action>
	<action name="CirclesControlBarShowVrButtons">
		if (CirclesControlBarmenuvravailable,
			set(layer[CirclesControlBarbtn_enter_vr].visible, true);
			set(layer[CirclesControlBarbtn_enter_vr_not].visible, false);
		,
			CirclesControlBarHideVrButtons(true);
		);
	</action>
	<action name="CirclesControlBarupdateVrButtons">
	if (tour_vrdevices,
		if (CirclesControlBarIsOpened,
			CirclesControlBarShowVrButtons();
		,
			CirclesControlBarHideVrButtons();
		);
	,
		if (CirclesControlBarIsOpened,
			CirclesControlBarHideVrButtons(true);
		,
			CirclesControlBarHideVrButtons();
		);
	);
	</action>


	<events name="CirclesControlBarcontrolmodechangedevent" 
		oncontrolmodechanged="CirclesControlBarupdateControlModeButtons();" 
		keep="true" />
	<action name="CirclesControlBarHideControlModeButtons">
		set(layer[CirclesControlBarbtn_ctrlmode_move_to].visible, false);
		set(layer[CirclesControlBarbtn_ctrlmode_drag_to].visible, false);
	</action>
	<action name="CirclesControlBarShowControlModeButtons">
		if (tour_controlmodemousetype == "moveto",
			set(layer[CirclesControlBarbtn_ctrlmode_drag_to].visible, true);
			set(layer[CirclesControlBarbtn_ctrlmode_move_to].visible, false);
		,
			set(layer[CirclesControlBarbtn_ctrlmode_move_to].visible, true);
			set(layer[CirclesControlBarbtn_ctrlmode_drag_to].visible, false);
		);
	</action>
	<action name="CirclesControlBarupdateControlModeButtons">
	if (device.desktop,
		if (CirclesControlBarIsOpened,
			CirclesControlBarShowControlModeButtons();
		,
			CirclesControlBarHideControlModeButtons();
		);
	,
		CirclesControlBarHideControlModeButtons();
	);
	</action>


  <action name="CirclesControlBarhideMenuControls">
    set(CirclesControlBarIsOpened, false);


	CirclesControlBarupdateFullscreenButtons();




	CirclesControlBarupdateControlModeButtons();

	CirclesControlBarupdateVrButtons();



	set(layer[CirclesControlBar_menu_bg].width, get(CirclesControlBarbackgroundwidthwhenclosed));

	set(layer[CirclesControlBar_menu_bg].visible, true);
  </action>
  <action name="CirclesControlBarshowMenuControls">
    set(CirclesControlBarIsOpened, true);
	set(layer[CirclesControlBar_menu_bg].visible, true);


	CirclesControlBarupdateFullscreenButtons();



	CirclesControlBarupdateVrButtons();

	CirclesControlBarupdateControlModeButtons();



    set(layer[CirclesControlBar_menu_bg].width, get(CirclesControlBarbackgroundwidthwhenopened));
  </action>




  <events name="CirclesControlBarmenufullscreenchangeevent"
          onenterfullscreen="CirclesControlBarupdateFullscreenButtons();"
          onexitfullscreen="CirclesControlBarupdateFullscreenButtons();"
          keep="true"/>
	<action name="CirclesControlBarHideFullscreenButtons">
		set(layer[CirclesControlBarbtn_openfs].visible , false);
		set(layer[CirclesControlBarbtn_closefs].visible, false);
	</action>
	<action name="CirclesControlBarShowFullscreenButtons">
		if (device.fullscreensupport,
			if(tour_fullscreen,
				set(layer[CirclesControlBarbtn_openfs].visible , false);
				set(layer[CirclesControlBarbtn_closefs].visible, true);
			,
				set(layer[CirclesControlBarbtn_openfs].visible ,true);
				set(layer[CirclesControlBarbtn_closefs].visible,false);
			);
		,
			CirclesControlBarHideFullscreenButtons();
		);
	</action>
	<action name="CirclesControlBarupdateFullscreenButtons">
		if (CirclesControlBarIsOpened,
			CirclesControlBarShowFullscreenButtons();
		,
			CirclesControlBarHideFullscreenButtons();
		);
	</action>



<layer name="CirclesControlBarmenuTooltipStyle"
	keep="true"
	enabled="false"
	capture="false"
	url="%FIRSTXML%/graphics/textfield.swf"
	align="center"
	background="false"
	border="false"
	css="color:#000000;font-family:Helvetica;font-weight:bold;font-size:14px;text-align:left;"
	height="20"
	autoheight="true"
	autowidth="auto"
	xoffset="0"
	yoffset="0"
	padding="2"
	selectable="false"
	zorder="0"
	visible="false"
	html=""
	edge="bottom"
/>
  <action name="CirclesControlBarbuildMenu">
    
    set(CirclesControlBarbutton_pos, 0);



      if (device.fullscreensupport,
        set(layer[CirclesControlBarbtn_openfs].x , get(CirclesControlBarbutton_pos));
        set(layer[CirclesControlBarbtn_closefs].x, get(CirclesControlBarbutton_pos));
        inc(CirclesControlBarbutton_pos, 45);
      );





    if (device.desktop,
      set(layer[CirclesControlBarbtn_ctrlmode_drag_to].x, get(CirclesControlBarbutton_pos));
      set(layer[CirclesControlBarbtn_ctrlmode_move_to].x, get(CirclesControlBarbutton_pos));
      inc(CirclesControlBarbutton_pos, 45);
    );


    if(plugin[ptpvrmode] AND device.html5,
      set(layer[CirclesControlBarbtn_enter_vr].x, get(CirclesControlBarbutton_pos));
      set(layer[CirclesControlBarbtn_enter_vr_not].x, get(CirclesControlBarbutton_pos));
      inc(CirclesControlBarbutton_pos, 45);
    );





      dec(CirclesControlBarbutton_pos, 5);

      set(CirclesControlBarbackgroundwidthwhenopened, get(CirclesControlBarbutton_pos));


    
      set(layer[CirclesControlBar_menu_bg].width, get(CirclesControlBarbackgroundwidthwhenopened));
	
	
	
    </action>

	<events name="CirclesControlBarStartTourEvents" onTourStart="CirclesControlBarCallOnStartTour();" keep="true" />
	
	<action name="CirclesControlBarCallOnStartTour">
		
		CirclesControlBarshowMenuControls();
	</action>



<!-- ********** -->
<!-- Small Gallery Bar - Scene specific -->
<!-- id : gallerybarforasinglepano -->
<!-- ********** -->

  <krpano gallerybarforasinglepanobuilt="false" gallerybarforasinglepanoBuildable="false" />
  <events name="gallerybarforasinglepanoevents"
          onxmlcomplete="gallerybarforasinglepanobuildBar();"
          hidetourcontrols="hidegallerybarforasinglepano();"
          showtourcontrols="showgallerybarforasinglepano();"
          keep="true"/>
  <action name="gallerybarforasinglepanobuildBar">
    ifnot (gallerybarforasinglepanobuilt,
      set(gallerybarforasinglepanoBuildable, true);
      gallerybarforasinglepanothumbbar_addimage(0,%FIRSTXML%/graphics/gallerybarforasinglepano/mayak_most_foto3.jpg);
      set(gallerybarforasinglepanoBuildable, true);
      gallerybarforasinglepanothumbbar_addimage(1,%FIRSTXML%/graphics/gallerybarforasinglepano/mayak_most_foto2.jpg);
      set(gallerybarforasinglepanoBuildable, true);
      gallerybarforasinglepanothumbbar_addimage(2,%FIRSTXML%/graphics/gallerybarforasinglepano/mayak_most_foto.jpg);
      set(gallerybarforasinglepanobuilt, true);
      
    );
  </action>

  <events name="gallerybarforasinglepanoStartEvents" onPanoStart="showgallerybarforasinglepano();" onTourStart="showgallerybarforasinglepano();" keep="true" />



  <layer name="gallerybarforasinglepanobackground" type="container" keep="true"
         bgcolor="0xffffff"
         bgalpha="0.20000000000000001"
         alpha="1.0"
         align="bottomright"
         x="10"
         y="0"
         zorder="2"
         visible="false"
         height="204"
         width="102"
         />

  <action name="hidegallerybarforasinglepano">
	gallerybarforasinglepanothumbbar_set_visible(false);
  </action>
  <action name="showgallerybarforasinglepano">
    set(displaythegallery_gallerybarforasinglepano, false);
    if(tour_displaycontrols,

    if (xml.scene == pano18, set(displaythegallery_gallerybarforasinglepano, true); );
    );
    if (displaythegallery_gallerybarforasinglepano,
      if(gallerybarforasinglepanoBuildable,
        gallerybarforasinglepanothumbbar_set_visible(true);
      );
    ,
      hidegallerybarforasinglepano();
    );
  </action>


  <action name="gallerybarforasinglepanothumbbar_addimage">
    txtadd(pname, 'gallerybarforasinglepanoPicture', %1);
    addplugin(get(pname));
    set(layer[%pname].zorder, 3);
    set(layer[%pname].url, %2);
    set(layer[%pname].align, bottomright);
    set(layer[%pname].width, 90);
    set(layer[%pname].height, 60);
    set(layer[%pname].onclick, gallerybarforasinglepano_showimage(get(name)));
    set(layer[%pname].visible, false);
    set(layer[%pname].keep, true);

    
    set(layer[%pname].x, 16);

    mul(tmp, 66, %1);
    add(tmp, tmp, 6);
    add(layer[%pname].y, 0, tmp );


    copy(layer[%pname].thumbx, layer[%pname].x);
    copy(layer[%pname].thumby, layer[%pname].y);
  </action>

  <action name="gallerybarforasinglepano_showimage">
    gallerybarforasinglepano_hide_allimages();

    set(layer[%1].zorder, 4);

    push(layer[%1].width);
    push(layer[%1].height);
    layer[%1].resetsize();
    copy(layer[%1].originalwidth , layer[%1].width);
    copy(layer[%1].originalheight, layer[%1].height);
    pop(layer[%1].height);
    pop(layer[%1].width);

    set(imgwidth , get(layer[%1].originalwidth));
    set(imgheight, get(layer[%1].originalheight));

    set(maxwidth, get(stagewidth));
    sub(maxwidth, get(stagewidth), 236);

    set(maxheight, get(stageheight));
    sub(maxheight, get(stageheight), 12);

    if(imgwidth GT maxwidth,
      mul(imgheight, imgheight, maxwidth);
      div(imgheight, imgheight, imgwidth);
      copy(imgwidth, maxwidth);
    );

    if(imgheight GT maxheight,
      mul(imgwidth, imgwidth, maxheight);
      div(imgwidth, imgwidth, imgheight);
      copy(imgheight, maxheight);
    );

    tween(layer[%1].width , get(imgwidth));
    tween(layer[%1].height, get(imgheight));

    layer[%1].changeorigin(center,center);

    tween(layer[%1].x, 0);
    tween(layer[%1].y, 0);

    set(layer[%1].onclick, gallerybarforasinglepano_hideimage(%1) );
  </action>

  <action name="gallerybarforasinglepano_hideimage">
    layer[%1].changeorigin(bottomright,bottomright);

    set(layer[%1].zorder, 3);

    tween(layer[%1].width , 90);
    tween(layer[%1].height, 60);
    tween(layer[%1].x, get(layer[%1].thumbx));
    tween(layer[%1].y, get(layer[%1].thumby));

    set(layer[%1].onclick, gallerybarforasinglepano_showimage(%1) );
  </action>

  <action name="gallerybarforasinglepano_hide_allimages">
    gallerybarforasinglepano_hideimage(gallerybarforasinglepanoPicture0);
    gallerybarforasinglepano_hideimage(gallerybarforasinglepanoPicture1);
    gallerybarforasinglepano_hideimage(gallerybarforasinglepanoPicture2);
  </action>

  <action name="gallerybarforasinglepanothumbbar_set_visible">
    set(layer[gallerybarforasinglepanoPicture0].visible,%1);
    set(layer[gallerybarforasinglepanoPicture1].visible,%1);
    set(layer[gallerybarforasinglepanoPicture2].visible,%1);
    set(layer[gallerybarforasinglepanobackground].visible, %1);
  </action>

<!-- ********** -->
<!-- Small Gallery Bar - Scene specific1 -->
<!-- id : gallerybarforasinglepano1 -->
<!-- ********** -->

  <krpano gallerybarforasinglepano1built="false" gallerybarforasinglepano1Buildable="false" />
  <events name="gallerybarforasinglepano1events"
          onxmlcomplete="gallerybarforasinglepano1buildBar();"
          hidetourcontrols="hidegallerybarforasinglepano1();"
          showtourcontrols="showgallerybarforasinglepano1();"
          keep="true"/>
  <action name="gallerybarforasinglepano1buildBar">
    ifnot (gallerybarforasinglepano1built,
      set(gallerybarforasinglepano1Buildable, true);
      gallerybarforasinglepano1thumbbar_addimage(0,%FIRSTXML%/graphics/gallerybarforasinglepano1/mayak_pered_zdaniem_foto2.jpg);
      set(gallerybarforasinglepano1Buildable, true);
      gallerybarforasinglepano1thumbbar_addimage(1,%FIRSTXML%/graphics/gallerybarforasinglepano1/mayak_pered_zdaniem_foto1.jpg);
      set(gallerybarforasinglepano1built, true);
      
    );
  </action>

  <events name="gallerybarforasinglepano1StartEvents" onPanoStart="showgallerybarforasinglepano1();" onTourStart="showgallerybarforasinglepano1();" keep="true" />



  <layer name="gallerybarforasinglepano1background" type="container" keep="true"
         bgcolor="0xffffff"
         bgalpha="0.20000000000000001"
         alpha="1.0"
         align="bottomright"
         x="10"
         y="0"
         zorder="5"
         visible="false"
         height="138"
         width="102"
         />

  <action name="hidegallerybarforasinglepano1">
	gallerybarforasinglepano1thumbbar_set_visible(false);
  </action>
  <action name="showgallerybarforasinglepano1">
    set(displaythegallery_gallerybarforasinglepano1, false);
    if(tour_displaycontrols,

    if (xml.scene == pano84, set(displaythegallery_gallerybarforasinglepano1, true); );
    );
    if (displaythegallery_gallerybarforasinglepano1,
      if(gallerybarforasinglepano1Buildable,
        gallerybarforasinglepano1thumbbar_set_visible(true);
      );
    ,
      hidegallerybarforasinglepano1();
    );
  </action>


  <action name="gallerybarforasinglepano1thumbbar_addimage">
    txtadd(pname, 'gallerybarforasinglepano1Picture', %1);
    addplugin(get(pname));
    set(layer[%pname].zorder, 6);
    set(layer[%pname].url, %2);
    set(layer[%pname].align, bottomright);
    set(layer[%pname].width, 90);
    set(layer[%pname].height, 60);
    set(layer[%pname].onclick, gallerybarforasinglepano1_showimage(get(name)));
    set(layer[%pname].visible, false);
    set(layer[%pname].keep, true);

    
    set(layer[%pname].x, 16);

    mul(tmp, 66, %1);
    add(tmp, tmp, 6);
    add(layer[%pname].y, 0, tmp );


    copy(layer[%pname].thumbx, layer[%pname].x);
    copy(layer[%pname].thumby, layer[%pname].y);
  </action>

  <action name="gallerybarforasinglepano1_showimage">
    gallerybarforasinglepano1_hide_allimages();

    set(layer[%1].zorder, 7);

    push(layer[%1].width);
    push(layer[%1].height);
    layer[%1].resetsize();
    copy(layer[%1].originalwidth , layer[%1].width);
    copy(layer[%1].originalheight, layer[%1].height);
    pop(layer[%1].height);
    pop(layer[%1].width);

    set(imgwidth , get(layer[%1].originalwidth));
    set(imgheight, get(layer[%1].originalheight));

    set(maxwidth, get(stagewidth));
    sub(maxwidth, get(stagewidth), 236);

    set(maxheight, get(stageheight));
    sub(maxheight, get(stageheight), 12);

    if(imgwidth GT maxwidth,
      mul(imgheight, imgheight, maxwidth);
      div(imgheight, imgheight, imgwidth);
      copy(imgwidth, maxwidth);
    );

    if(imgheight GT maxheight,
      mul(imgwidth, imgwidth, maxheight);
      div(imgwidth, imgwidth, imgheight);
      copy(imgheight, maxheight);
    );

    tween(layer[%1].width , get(imgwidth));
    tween(layer[%1].height, get(imgheight));

    layer[%1].changeorigin(center,center);

    tween(layer[%1].x, 0);
    tween(layer[%1].y, 0);

    set(layer[%1].onclick, gallerybarforasinglepano1_hideimage(%1) );
  </action>

  <action name="gallerybarforasinglepano1_hideimage">
    layer[%1].changeorigin(bottomright,bottomright);

    set(layer[%1].zorder, 6);

    tween(layer[%1].width , 90);
    tween(layer[%1].height, 60);
    tween(layer[%1].x, get(layer[%1].thumbx));
    tween(layer[%1].y, get(layer[%1].thumby));

    set(layer[%1].onclick, gallerybarforasinglepano1_showimage(%1) );
  </action>

  <action name="gallerybarforasinglepano1_hide_allimages">
    gallerybarforasinglepano1_hideimage(gallerybarforasinglepano1Picture0);
    gallerybarforasinglepano1_hideimage(gallerybarforasinglepano1Picture1);
  </action>

  <action name="gallerybarforasinglepano1thumbbar_set_visible">
    set(layer[gallerybarforasinglepano1Picture0].visible,%1);
    set(layer[gallerybarforasinglepano1Picture1].visible,%1);
    set(layer[gallerybarforasinglepano1background].visible, %1);
  </action>

<!-- ********** -->
<!-- Small Gallery Bar - Scene specific2 -->
<!-- id : gallerybarforasinglepano2 -->
<!-- ********** -->

  <krpano gallerybarforasinglepano2built="false" gallerybarforasinglepano2Buildable="false" />
  <events name="gallerybarforasinglepano2events"
          onxmlcomplete="gallerybarforasinglepano2buildBar();"
          hidetourcontrols="hidegallerybarforasinglepano2();"
          showtourcontrols="showgallerybarforasinglepano2();"
          keep="true"/>
  <action name="gallerybarforasinglepano2buildBar">
    ifnot (gallerybarforasinglepano2built,
      set(gallerybarforasinglepano2Buildable, true);
      gallerybarforasinglepano2thumbbar_addimage(0,%FIRSTXML%/graphics/gallerybarforasinglepano2/mayak_szadi_zdania_foto2.jpg);
      set(gallerybarforasinglepano2Buildable, true);
      gallerybarforasinglepano2thumbbar_addimage(1,%FIRSTXML%/graphics/gallerybarforasinglepano2/mayak_szadi_zdania_foto1.jpg);
      set(gallerybarforasinglepano2built, true);
      
    );
  </action>

  <events name="gallerybarforasinglepano2StartEvents" onPanoStart="showgallerybarforasinglepano2();" onTourStart="showgallerybarforasinglepano2();" keep="true" />



  <layer name="gallerybarforasinglepano2background" type="container" keep="true"
         bgcolor="0xffffff"
         bgalpha="0.20000000000000001"
         alpha="1.0"
         align="bottomright"
         x="10"
         y="0"
         zorder="8"
         visible="false"
         height="138"
         width="102"
         />

  <action name="hidegallerybarforasinglepano2">
	gallerybarforasinglepano2thumbbar_set_visible(false);
  </action>
  <action name="showgallerybarforasinglepano2">
    set(displaythegallery_gallerybarforasinglepano2, false);
    if(tour_displaycontrols,

    if (xml.scene == pano120, set(displaythegallery_gallerybarforasinglepano2, true); );
    );
    if (displaythegallery_gallerybarforasinglepano2,
      if(gallerybarforasinglepano2Buildable,
        gallerybarforasinglepano2thumbbar_set_visible(true);
      );
    ,
      hidegallerybarforasinglepano2();
    );
  </action>


  <action name="gallerybarforasinglepano2thumbbar_addimage">
    txtadd(pname, 'gallerybarforasinglepano2Picture', %1);
    addplugin(get(pname));
    set(layer[%pname].zorder, 9);
    set(layer[%pname].url, %2);
    set(layer[%pname].align, bottomright);
    set(layer[%pname].width, 90);
    set(layer[%pname].height, 60);
    set(layer[%pname].onclick, gallerybarforasinglepano2_showimage(get(name)));
    set(layer[%pname].visible, false);
    set(layer[%pname].keep, true);

    
    set(layer[%pname].x, 16);

    mul(tmp, 66, %1);
    add(tmp, tmp, 6);
    add(layer[%pname].y, 0, tmp );


    copy(layer[%pname].thumbx, layer[%pname].x);
    copy(layer[%pname].thumby, layer[%pname].y);
  </action>

  <action name="gallerybarforasinglepano2_showimage">
    gallerybarforasinglepano2_hide_allimages();

    set(layer[%1].zorder, 10);

    push(layer[%1].width);
    push(layer[%1].height);
    layer[%1].resetsize();
    copy(layer[%1].originalwidth , layer[%1].width);
    copy(layer[%1].originalheight, layer[%1].height);
    pop(layer[%1].height);
    pop(layer[%1].width);

    set(imgwidth , get(layer[%1].originalwidth));
    set(imgheight, get(layer[%1].originalheight));

    set(maxwidth, get(stagewidth));
    sub(maxwidth, get(stagewidth), 236);

    set(maxheight, get(stageheight));
    sub(maxheight, get(stageheight), 12);

    if(imgwidth GT maxwidth,
      mul(imgheight, imgheight, maxwidth);
      div(imgheight, imgheight, imgwidth);
      copy(imgwidth, maxwidth);
    );

    if(imgheight GT maxheight,
      mul(imgwidth, imgwidth, maxheight);
      div(imgwidth, imgwidth, imgheight);
      copy(imgheight, maxheight);
    );

    tween(layer[%1].width , get(imgwidth));
    tween(layer[%1].height, get(imgheight));

    layer[%1].changeorigin(center,center);

    tween(layer[%1].x, 0);
    tween(layer[%1].y, 0);

    set(layer[%1].onclick, gallerybarforasinglepano2_hideimage(%1) );
  </action>

  <action name="gallerybarforasinglepano2_hideimage">
    layer[%1].changeorigin(bottomright,bottomright);

    set(layer[%1].zorder, 9);

    tween(layer[%1].width , 90);
    tween(layer[%1].height, 60);
    tween(layer[%1].x, get(layer[%1].thumbx));
    tween(layer[%1].y, get(layer[%1].thumby));

    set(layer[%1].onclick, gallerybarforasinglepano2_showimage(%1) );
  </action>

  <action name="gallerybarforasinglepano2_hide_allimages">
    gallerybarforasinglepano2_hideimage(gallerybarforasinglepano2Picture0);
    gallerybarforasinglepano2_hideimage(gallerybarforasinglepano2Picture1);
  </action>

  <action name="gallerybarforasinglepano2thumbbar_set_visible">
    set(layer[gallerybarforasinglepano2Picture0].visible,%1);
    set(layer[gallerybarforasinglepano2Picture1].visible,%1);
    set(layer[gallerybarforasinglepano2background].visible, %1);
  </action>

  <!-- Fullscreen Management -->
  <action name="exitFullScreen" devices="fullscreensupport">set(tour_fullscreen,false);set(fullscreen,false);</action>
  <action name="enterFullScreen" devices="fullscreensupport">set(tour_fullscreen,true);set(fullscreen,true);</action>
  <action name="switchFullScreen">if(tour_fullscreen,exitFullScreen();,enterFullScreen(););</action>

  
  <events name="krpanoExitFullscreenEvent"
    onexitfullscreen="if(tour_fullscreen,exitFullScreenChangeEvent(););"
    keep="true" />

  <action name="exitFullScreenChangeEvent" devices="fullscreensupport">set(tour_fullscreen,false);events.dispatch(onexitfullscreen);</action>

	<!-- WebVR plugin for VR availability tests -->

	<plugin name="ptpvrmode" devices="html5" keep="true"
		url="%FIRSTXML%/graphics/webvr.js"
		mobilevr_support="true"
		mobilevr_fake_support="false"
		vr_cursor=""
		vr_cursor_enabled="false"
		onavailable="delayedcall(1, checkVrAvailability(););"
		onunavailable="checkVrUnavailable();"
		/>
	<action name="checkVrAvailability">
		if(plugin[ptpvrmode],
			if (plugin[ptpvrmode].isavailable,
				set(tour_vrdevices, true);
				events.dispatch(onvravailable);
			,
				set(tour_vrdevices, false);
			);
		,
			checkVrUnavailable();
		);
	</action>
	<action name="checkVrUnavailable">
		set(tour_vrdevices, false);
		events.dispatch(onvrunavailable);
	</action>
</krpano>